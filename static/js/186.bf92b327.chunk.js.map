{"version":3,"file":"static/js/186.bf92b327.chunk.js","mappings":"+PAMaA,EAAiB,WAC5B,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GAASI,KAAKL,EAC1B,GAAE,CAACC,IAEGF,CACR,EAEYO,EAAkB,WAE7B,OAA8BR,EAAAA,EAAAA,UAAS,MAAvC,eAAOS,EAAP,KAAgBC,EAAhB,KACQP,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,YACRM,EAAAA,EAAAA,IAAaR,GACVI,KAAKG,GACLE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,iCAAhB,IACXC,SACJ,GAAE,CAACb,IAEGM,CACR,EAEYQ,EAAe,WAC1B,OAAwBjB,EAAAA,EAAAA,UAAS,MAAjC,eAAOkB,EAAP,KAAaC,EAAb,KACQhB,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRe,EAAAA,EAAAA,GAAUjB,GAASI,KAAKY,EACzB,GAAE,CAAChB,IAEGe,CACR,C,mDCpBD,UAnBgB,WACd,IAAMT,GAAUD,EAAAA,EAAAA,MAEhB,OACE,eAAIa,UAAU,cAAd,SACIC,MAAMC,QAAQd,IACdA,EAAQe,OAAS,GACjBf,EAAQgB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,2BACE,cAAGP,UAAU,gBAAb,SAA8BK,KAC9B,cAAGL,UAAU,cAAb,SAA4BM,MAFrBC,EADC,MAMZ,cAAGP,UAAU,cAAb,uDAIP,C,8LCjBKQ,EAAS,mCAEFC,EAAa,mCAAG,oGACJC,EAAAA,EAAAA,IAAA,kEACsCF,IAFlC,cACrBG,EADqB,yBAMpBA,EAASC,KAAKC,SANM,2CAAH,qDASb5B,EAAU,mCAAG,WAAMH,GAAN,uFACD4B,EAAAA,EAAAA,IAAA,6CACiB5B,EADjB,oBACoC0B,IAFnC,cAClBM,EADkB,yBAKjBA,EAASF,MALQ,2CAAH,sDAQVG,EAAU,mCAAG,WAAMC,GAAN,uFACDN,EAAAA,EAAAA,IAAA,0DAC8BM,EAD9B,oBAC+CR,IAF9C,cAClBM,EADkB,yBAIjBA,EAASF,KAAKC,SAJG,2CAAH,sDAOVd,EAAS,mCAAG,WAAMQ,GAAN,uFACAG,EAAAA,EAAAA,IAAA,6CACiBH,EADjB,4BACuCC,IAFvC,cACjBM,EADiB,yBAIhBA,EAASF,KAAKf,MAJE,2CAAH,sDAOTP,EAAY,mCAAG,WAAMiB,GAAN,uFACHG,EAAAA,EAAAA,IAAA,6CACiBH,EADjB,4BACuCC,IAFpC,cACpBM,EADoB,yBAInBA,EAASF,KAAKC,SAJK,2CAAH,qD","sources":["components/Hooks/UseFetchMovies.jsx","components/Reviews/Reviews.jsx","services/moviesApi.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { fetchMovie } from '../../services/moviesApi';\nimport { fetchReviews } from '../../services/moviesApi';\nimport { fetchCast } from '../../services/moviesApi';\n\nexport const useFetchMovies = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovie(movieId).then(setMovie);\n  }, [movieId]);\n\n  return movie;\n};\n\nexport const useFetchReviews = () => {\n  // const [loading, setLoading] = useState(true);\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchReviews(movieId)\n      .then(setReviews)\n      .catch(error => console.log('Something went wrong Home Page'))\n      .finally();\n  }, [movieId]);\n\n  return reviews;\n};\n\nexport const useFetchCast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchCast(movieId).then(setCast);\n  }, [movieId]);\n\n  return cast;\n};\n","import { useFetchReviews } from 'components/Hooks/UseFetchMovies';\n\nconst Reviews = () => {\n  const reviews = useFetchReviews();\n\n  return (\n    <ul className=\"reviewsList\">\n      {(Array.isArray(reviews) &&\n        reviews.length > 0 &&\n        reviews.map(({ author, content, id }) => (\n          <li key={id}>\n            <p className=\"reviewsAuthor\">{author}</p>\n            <p className=\"reviewsText\">{content}</p>\n          </li>\n        ))) || (\n        <p className=\"reviewsText\">We don't have any reviews for this movie</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst apiKEY = '3cc1352acc3f9742a9cfb3f54e0b60a0';\n\nexport const fetchTrending = async () => {\n  const trending = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKEY}`\n  );\n\n  // console.log(trending.data.results);\n  return trending.data.results;\n};\n\nexport const fetchMovie = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKEY}`\n  );\n  // console.log(response);\n  return response.data;\n};\n\nexport const fetchQuery = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${apiKEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKEY}`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKEY}`\n  );\n  return response.data.results;\n};\n"],"names":["useFetchMovies","useState","movie","setMovie","movieId","useParams","useEffect","fetchMovie","then","useFetchReviews","reviews","setReviews","fetchReviews","catch","error","console","log","finally","useFetchCast","cast","setCast","fetchCast","className","Array","isArray","length","map","author","content","id","apiKEY","fetchTrending","axios","trending","data","results","response","fetchQuery","query"],"sourceRoot":""}
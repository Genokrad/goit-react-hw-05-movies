{"version":3,"file":"static/js/247.9b1b6055.chunk.js","mappings":"gNAqDA,UA9Ca,WACX,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAeMC,EAbe,WACnB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUH,GACPI,KAAKR,GACLS,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,iCAAhB,IACXC,QAAQX,GAAW,GACvB,GAAE,CAACE,IAEGL,CACR,CAEae,GAEd,OACE,gBAAIC,UAAU,WAAd,UACGd,IAAW,SAAC,IAAD,IACXE,GACCA,EAAMa,KAAI,SAAAjB,GAAI,OACZ,gBAAIgB,UAAU,WAAd,WACE,gBACEE,IACElB,EAAKmB,aAAL,0CACuCnB,EAAKmB,cACxCC,EAENC,IAAKrB,EAAKsB,MAAQtB,EAAKuB,cACvBC,OAAO,MACPC,MAAM,MACNT,UAAU,aAEZ,iBAAKA,UAAU,cAAf,WACE,uBAAIhB,EAAKsB,MAAQtB,EAAKuB,iBACtB,sCAAcvB,EAAK0B,kBAdO1B,EAAK2B,GADvB,MAqBrB,C,8LCjDKC,EAAS,mCAEFC,EAAa,mCAAG,oGACJC,EAAAA,EAAAA,IAAA,kEACsCF,IAFlC,cACrBG,EADqB,yBAMpBA,EAASC,KAAKC,SANM,2CAAH,qDASbC,EAAU,mCAAG,WAAM7B,GAAN,uFACDyB,EAAAA,EAAAA,IAAA,6CACiBzB,EADjB,oBACoCuB,IAFnC,cAClBO,EADkB,yBAKjBA,EAASH,MALQ,2CAAH,sDAQVI,EAAU,mCAAG,WAAMC,GAAN,uFACDP,EAAAA,EAAAA,IAAA,0DAC8BO,EAD9B,oBAC+CT,IAF9C,cAClBO,EADkB,yBAIjBA,EAASH,KAAKC,SAJG,2CAAH,sDAOVzB,EAAS,mCAAG,WAAMmB,GAAN,uFACAG,EAAAA,EAAAA,IAAA,6CACiBH,EADjB,4BACuCC,IAFvC,cACjBO,EADiB,yBAIhBA,EAASH,KAAKhC,MAJE,2CAAH,sDAOTsC,EAAY,mCAAG,WAAMX,GAAN,uFACHG,EAAAA,EAAAA,IAAA,6CACiBH,EADjB,4BACuCC,IAFpC,cACpBO,EADoB,yBAInBA,EAASH,KAAKC,SAJK,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/moviesApi.js"],"sourcesContent":["// import { useFetchCast } from 'components/Hooks/UseFetchMovies';\nimport worker from '../../images/worker.png';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { fetchCast } from '../../services/moviesApi';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const useFetchCast = () => {\n    const { movieId } = useParams();\n\n    useEffect(() => {\n      fetchCast(movieId)\n        .then(setCast)\n        .catch(error => console.log('Something went wrong Home Page'))\n        .finally(setLoading(false));\n    }, [movieId]);\n\n    return cast;\n  };\n\n  const casts = useFetchCast();\n\n  return (\n    <ul className=\"castList\">\n      {loading && <Loader />}\n      {casts &&\n        casts.map(cast => (\n          <li className=\"castItem\" key={cast.id}>\n            <img\n              src={\n                cast.profile_path\n                  ? `https://image.tmdb.org/t/p/w300/${cast.profile_path}`\n                  : worker\n              }\n              alt={cast.name || cast.original_name}\n              height=\"400\"\n              width=\"300\"\n              className=\"castImg\"\n            />\n            <div className=\"personsName\">\n              <p>{cast.name || cast.original_name}</p>\n              <p>Character:{cast.character}</p>\n            </div>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst apiKEY = '3cc1352acc3f9742a9cfb3f54e0b60a0';\n\nexport const fetchTrending = async () => {\n  const trending = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKEY}`\n  );\n\n  // console.log(trending.data.results);\n  return trending.data.results;\n};\n\nexport const fetchMovie = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKEY}`\n  );\n  // console.log(response);\n  return response.data;\n};\n\nexport const fetchQuery = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${apiKEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKEY}`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKEY}`\n  );\n  return response.data.results;\n};\n"],"names":["useState","cast","setCast","loading","setLoading","casts","movieId","useParams","useEffect","fetchCast","then","catch","error","console","log","finally","useFetchCast","className","map","src","profile_path","worker","alt","name","original_name","height","width","character","id","apiKEY","fetchTrending","axios","trending","data","results","fetchMovie","response","fetchQuery","query","fetchReviews"],"sourceRoot":""}
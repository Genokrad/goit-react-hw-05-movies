{"version":3,"file":"static/js/316.e307e763.chunk.js","mappings":"qPAIaA,EAAa,SAAC,GAMpB,IALLC,EAKI,EALJA,aACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,MAEMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,kBAAMC,UAAU,OAAOC,OAAO,GAAGC,SAAUT,EAA3C,WACE,mBAAQO,UAAU,eAAeG,KAAK,SAAtC,qBAIA,kBACEH,UAAU,QACVG,KAAK,OACLC,MAAOV,EACPW,SAAUV,OAGbE,IACC,eAAIG,UAAU,WAAd,SACGJ,GACCA,EAAgBU,KAAI,SAAAC,GAAK,OACvB,yBACE,iBAAKP,UAAU,eAAf,WACE,gBACEQ,IACED,EAAME,YAAN,0CACuCF,EAAME,aACzCC,EAENC,IAAKJ,EAAMK,MAAQL,EAAMM,cACzBC,OAAO,MACPC,MAAM,MACNf,UAAU,aAEZ,gBAAKA,UAAU,aAAf,UACE,SAAC,KAAD,CAAMgB,GAAE,UAAKT,EAAMU,IAAMC,MAAO,CAAEC,KAAMrB,GAAxC,UACE,iBAAME,UAAU,gBAAhB,SAAiCO,EAAMa,gBAftCb,EAAMU,GADQ,QA0BpC,ECZD,EAtCmB,WACjB,OAAoCI,EAAAA,EAAAA,UAAS,IAA7C,eAAO3B,EAAP,KAAmB4B,EAAnB,KAEA,GAA8CD,EAAAA,EAAAA,UAAS,MAAvD,eAAOzB,EAAP,KAAwB2B,EAAxB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEM7B,EAAQ4B,EAAaE,IAAI,SAmB/B,OAPAC,EAAAA,EAAAA,YAAU,WACM,KAAV/B,IAGJgC,EAAAA,EAAAA,IAAWhC,GAAOiC,MAAK,SAAAC,GAAQ,OAAIR,EAAmBQ,EAAvB,GAChC,GAAE,CAAClC,KAGF,+BACE,SAACL,EAAD,CACEG,aApBe,SAAAqC,GAAK,OAAIV,EAAcU,EAAMC,OAAO7B,MAAM8B,cAArC,EAqBpBzC,aAnBe,SAAAuC,GACnBA,EAAMG,iBAENT,EAAgBhC,EAAa,CAAEG,MAAOH,GAAe,CAAC,GAEtD4B,EAAc,GACf,EAcK1B,gBAAiBA,EACjBC,MAAOA,KAId,C,8LCxCKuC,EAAS,mCAEFC,EAAa,mCAAG,oGACJC,EAAAA,EAAAA,IAAA,kEACsCF,IAFlC,cACrBG,EADqB,yBAMpBA,EAASC,KAAKC,SANM,2CAAH,qDASbC,EAAU,mCAAG,WAAMC,GAAN,uFACDL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,oBACoCP,IAFnC,cAClBL,EADkB,yBAKjBA,EAASS,MALQ,2CAAH,sDAQVX,EAAU,mCAAG,WAAMhC,GAAN,uFACDyC,EAAAA,EAAAA,IAAA,0DAC8BzC,EAD9B,oBAC+CuC,IAF9C,cAClBL,EADkB,yBAIjBA,EAASS,KAAKC,SAJG,2CAAH,sDAOVG,EAAS,mCAAG,WAAM3B,GAAN,uFACAqB,EAAAA,EAAAA,IAAA,6CACiBrB,EADjB,4BACuCmB,IAFvC,cACjBL,EADiB,yBAIhBA,EAASS,KAAKK,MAJE,2CAAH,sDAOTC,EAAY,mCAAG,WAAM7B,GAAN,uFACHqB,EAAAA,EAAAA,IAAA,6CACiBrB,EADjB,4BACuCmB,IAFpC,cACpBL,EADoB,yBAInBA,EAASS,KAAKC,SAJK,2CAAH,qD","sources":["components/SearchForm/SearchForm.jsx","Pages/MoviesPage/MoviesPage.jsx","services/moviesApi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport worker from '../../images/worker.png';\n\nexport const SearchForm = ({\n  handleSubmit,\n  inputValue,\n  handleChange,\n  moviesFromQuery,\n  query,\n}) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <form className=\"form\" action=\"\" onSubmit={handleSubmit}>\n        <button className=\"submitButton\" type=\"submit\">\n          Search\n        </button>\n\n        <input\n          className=\"input\"\n          type=\"text\"\n          value={inputValue}\n          onChange={handleChange}\n        />\n      </form>\n      {query && (\n        <ul className=\"filmList\">\n          {moviesFromQuery &&\n            moviesFromQuery.map(movie => (\n              <li key={movie.id}>\n                <div className=\"movie-wraper\">\n                  <img\n                    src={\n                      movie.poster_path\n                        ? `https://image.tmdb.org/t/p/w300/${movie.poster_path}`\n                        : worker\n                    }\n                    alt={movie.name || movie.original_name}\n                    height=\"400\"\n                    width=\"300\"\n                    className=\"castImg\"\n                  />\n                  <div className=\"movie-name\">\n                    <Link to={`${movie.id}`} state={{ from: location }}>\n                      <span className=\"movieNameText\">{movie.title}</span>\n                    </Link>\n                  </div>\n                </div>\n              </li>\n            ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { fetchQuery } from '../../services/moviesApi';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\n// import { useFetchMovies } from 'components/Hooks/UseFetchMovies';\n\nconst MoviesPage = () => {\n  const [inputValue, setInputValue] = useState('');\n  // const [query, setQuery] = useState('');\n  const [moviesFromQuery, setMoviesFromQuery] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  const handleChange = event => setInputValue(event.target.value.toLowerCase());\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    setSearchParams(inputValue ? { query: inputValue } : {});\n\n    setInputValue('');\n  };\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    fetchQuery(query).then(response => setMoviesFromQuery(response));\n  }, [query]);\n\n  return (\n    <>\n      <SearchForm\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        moviesFromQuery={moviesFromQuery}\n        query={query}\n      />\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst apiKEY = '3cc1352acc3f9742a9cfb3f54e0b60a0';\n\nexport const fetchTrending = async () => {\n  const trending = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKEY}`\n  );\n\n  // console.log(trending.data.results);\n  return trending.data.results;\n};\n\nexport const fetchMovie = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKEY}`\n  );\n  // console.log(response);\n  return response.data;\n};\n\nexport const fetchQuery = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${apiKEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKEY}`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKEY}`\n  );\n  return response.data.results;\n};\n"],"names":["SearchForm","handleSubmit","inputValue","handleChange","moviesFromQuery","query","location","useLocation","className","action","onSubmit","type","value","onChange","map","movie","src","poster_path","worker","alt","name","original_name","height","width","to","id","state","from","title","useState","setInputValue","setMoviesFromQuery","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchQuery","then","response","event","target","toLowerCase","preventDefault","apiKEY","fetchTrending","axios","trending","data","results","fetchMovie","movieId","fetchCast","cast","fetchReviews"],"sourceRoot":""}
{"version":3,"file":"static/js/549.7eefd153.chunk.js","mappings":"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","sources":["components/Form/Form.jsx","components/MovieFromSearch/MovieFromSearch.jsx","components/SearchForm/SearchForm.jsx","Pages/MoviesPage/MoviesPage.jsx","services/moviesApi.js"],"sourcesContent":["const Form = ({ handleSubmit, inputValue, handleChange }) => {\n  return (\n    <form className=\"form\" action=\"\" onSubmit={handleSubmit}>\n      <button className=\"submitButton\" type=\"submit\">\n        Search\n      </button>\n\n      <input\n        className=\"input\"\n        type=\"text\"\n        value={inputValue}\n        onChange={handleChange}\n      />\n    </form>\n  );\n};\n\nexport { Form };\n","import { Link, useLocation } from 'react-router-dom';\nimport worker from '../../images/worker.png';\n\nconst MovieFromSearch = ({ moviesFromQuery, query }) => {\n  const location = useLocation();\n  return (\n    <ul className=\"filmList\">\n      {moviesFromQuery && moviesFromQuery.length > 0 ? (\n        moviesFromQuery.map(movie => (\n          <li key={movie.id}>\n            <div className=\"movie-wraper\">\n              <img\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w300/${movie.poster_path}`\n                    : worker\n                }\n                alt={movie.name || movie.original_name}\n                height=\"400\"\n                width=\"300\"\n                className=\"castImg\"\n              />\n              <div className=\"movie-name\">\n                <Link to={`${movie.id}`} state={{ from: location }}>\n                  <span className=\"movieNameText\">{movie.title}</span>\n                </Link>\n              </div>\n            </div>\n          </li>\n        ))\n      ) : (\n        <p className=\"reviewsText\">We dont find any films</p>\n      )}\n    </ul>\n  );\n};\n\nexport { MovieFromSearch };\n","import { Form } from 'components/Form/Form';\nimport { MovieFromSearch } from 'components/MovieFromSearch/MovieFromSearch';\n\nexport const SearchForm = ({\n  handleSubmit,\n  inputValue,\n  handleChange,\n  moviesFromQuery,\n  query,\n}) => {\n  return (\n    <>\n      <Form\n        handleSubmit={handleSubmit}\n        inputValue={inputValue}\n        handleChange={handleChange}\n      />\n      {moviesFromQuery && (\n        <MovieFromSearch query={query} moviesFromQuery={moviesFromQuery} />\n      )}\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { fetchQuery } from '../../services/moviesApi';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\n// import { useFetchMovies } from 'components/Hooks/UseFetchMovies';\n\nconst MoviesPage = () => {\n  const [inputValue, setInputValue] = useState('');\n  // const [query, setQuery] = useState('');\n  const [moviesFromQuery, setMoviesFromQuery] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  const handleChange = event => setInputValue(event.target.value.toLowerCase());\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    setSearchParams(inputValue ? { query: inputValue } : {});\n\n    setInputValue('');\n  };\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    fetchQuery(query).then(response => setMoviesFromQuery(response));\n  }, [query]);\n\n  return (\n    <>\n      <SearchForm\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        moviesFromQuery={moviesFromQuery}\n        query={query}\n      />\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst apiKEY = '3cc1352acc3f9742a9cfb3f54e0b60a0';\n\nexport const fetchTrending = async () => {\n  const trending = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKEY}`\n  );\n\n  // console.log(trending.data.results);\n  return trending.data.results;\n};\n\nexport const fetchMovie = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKEY}`\n  );\n  // console.log(response);\n  return response.data;\n};\n\nexport const fetchQuery = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${apiKEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKEY}`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKEY}`\n  );\n  return response.data.results;\n};\n"],"names":["Form","handleSubmit","inputValue","handleChange","className","action","onSubmit","type","value","onChange","MovieFromSearch","moviesFromQuery","location","query","useLocation","length","map","movie","src","poster_path","worker","alt","name","original_name","height","width","to","id","state","from","title","SearchForm","useState","setInputValue","setMoviesFromQuery","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchQuery","then","response","event","target","toLowerCase","preventDefault","apiKEY","fetchTrending","axios","trending","data","results","fetchMovie","movieId","fetchCast","cast","fetchReviews"],"sourceRoot":""}